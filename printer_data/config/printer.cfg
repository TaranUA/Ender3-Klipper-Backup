[include shell_command.cfg]
[include mainsail.cfg]
[include reshelper.cfg]

[mcu]
canbus_uuid: 0d74c1b33ffe

[mcu EBBCan]
canbus_uuid: aae2b024ec9a

[mcu adxl]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66368254F775B2A-if00

[virtual_sdcard]
path: /home/taran/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 1500
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 5.0

[exclude_object]

[force_move]
enable_force_move: True #False

[temperature_sensor CB2]
sensor_type: temperature_host

[temperature_sensor M5P]
sensor_type: temperature_mcu
sensor_mcu: mcu

[temperature_sensor EBB36]
sensor_type: temperature_mcu
sensor_mcu: EBBCan

# ADXL

[adxl345 bed]
cs_pin: adxl:gpio9
spi_software_sclk_pin: adxl:gpio10
spi_software_mosi_pin: adxl:gpio11
spi_software_miso_pin: adxl:gpio12
axes_map: x,y,z #For Y (bed)

[output_pin RP2040_power_mode] # Improve power stability
pin: adxl:gpio23

[adxl345 hotend]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip_x: adxl345 hotend
accel_chip_y: adxl345 bed
probe_points: 117.5,117.5,50 # Somewhere slightly above the middle of your print bed
accel_per_hz: 90

[input_shaper]
shaper_freq_x: 54.4
shaper_type_x: mzv
shaper_freq_y: 39.0
shaper_type_y: 2hump_ei #mzv
damping_ratio_x: 0.0516
damping_ratio_y: 0.082

# BTT Manta M5P

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD5, EXP1_3=PB3, EXP1_5=PB5, EXP1_7=PB7, EXP1_9=<GND>,
    EXP1_2=PD4,  EXP1_4=PD6, EXP1_6=PB4, EXP1_8=PB6, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PB8, EXP2_5=PC10, EXP2_7=PC12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB9, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# BTT MINI12864 V2.0

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

[pwm_cycle_time BEEPER_pin]
pin: EXP1_1
value: 0
shutdown_value: 0
cycle_time: 0.001

[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4

[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3 TRANSMIT=0   # Backlit Screen colour
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0   # Bottom right knob colour
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1              # Top left Knob colour

# Disable Octoprint in LCD menu
[menu __main __octoprint]
type: disabled

# Beeper macro

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[fan]
pin: EBBCan: PA0 #P2.3

[heater_fan hotend_fan]
pin: EBBCan: PA1 #P2.4
heater: extruder
heater_temp: 50.0

[stepper_x]
step_pin: PC8
dir_pin: !PC9
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
endstop_pin: PD3
position_endstop: -4
position_min: -4
position_max: 252
homing_speed: 50

[stepper_y]
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: PD2
position_endstop: -3
position_min: -3
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PC6
dir_pin: PC7
enable_pin: !PA9
microsteps: 64
rotation_distance: 40
gear_ratio: 80:16
endstop_pin: probe:z_virtual_endstop
# endstop_pin: P1.27
# position_endstop: 0.0
position_max: 230
position_min: -7.0
homing_speed: 50

[stepper_z1]
step_pin: PB12
dir_pin: !PB11
enable_pin: !PA8
microsteps: 64
rotation_distance: 40
gear_ratio: 80:16

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 22.9703775
gear_ratio: 50:10
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3
control: pid
pid_Kp: 45.304
pid_Ki: 8.630
pid_Kd: 59.460
min_temp: 0
max_temp: 260
max_extrude_only_distance: 101

[tmc2209 stepper_x]
uart_pin: PD9
run_current: 0.8 #0.8
interpolate: true
stealthchop_threshold: 0 

[tmc2209 stepper_y]
uart_pin: PD8
run_current: 0.8 #1.2
interpolate: true
stealthchop_threshold: 0

[tmc2209 stepper_z]
uart_pin: PB10
run_current: 0.6 #0.6
interpolate: true
stealthchop_threshold: 0

[tmc2209 stepper_z1]
uart_pin: PB2
run_current: 0.6 #0.6
interpolate: true
stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.6
interpolate: true
stealthchop_threshold: 0

[heater_bed]
heater_pin: PA5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 73.053
pid_Ki: 1.353
pid_Kd: 986.222
min_temp: 0
max_temp: 130

[motor_constants usongshine-17hs4401s]
resistance: 2.4
inductance: 0.0037
holding_torque: 0.42
max_current: 1.5
steps_per_revolution: 200

[autotune_tmc stepper_x]
motor: creality-42-40
tuning_goal: performance
voltage: 24

[autotune_tmc stepper_y]
motor: ldo-42sth48-2504ac
tuning_goal: performance
voltage: 24

[autotune_tmc stepper_z]
motor: usongshine-17hs4401s
tuning_goal: silent
voltage: 24

[autotune_tmc stepper_z1]
motor: usongshine-17hs4401s
tuning_goal: silent
voltage: 24

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg
tuning_goal: performance #auto #silent
voltage: 24

#####################################################################
# KlackEnder- Settings
#####################################################################

# !! Change your Z endstop pin from 'endstop_pin: Pin123' to 'endstop_pin: probe:z_virtual_endstop'
# !! Also add in [stepper_y] 'position_min: -8'. Idk why but most configs have this wrong. For the Stock Ender 3 the homed Y position is -8.

[probe]
pin: ^EBBCan: PB6 #Change to where you plug your probe in, endstop or probe pin pulled high (^)
z_offset: 9.750 #Measure per your specific setup. Klipper will NOT save this value if this in not located in printer.cfg
x_offset: 29 # negative = left of the nozzle
y_offset: 0 # negative = in front of of the nozzle
speed: 10.0
lift_speed: 20.0
sample_retract_dist: 1
samples: 3
samples_tolerance_retries: 6

##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
[bed_mesh]
speed: 120
horizontal_move_z: 15 #Positive value equal to z_offset or larger. eg: if z_offset is -2.5 this must be at least 2.5 or larger
mesh_min: 29,10
mesh_max: 225,225
probe_count: 5,5
zero_reference_position: 117.5, 117.5 #for 235x235 bed. adapt to your bed size if needed. same for mesh min and max above
algorithm: bicubic
fade_start: 1
fade_end: 10
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
split_delta_z: 0.015
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

[homing_override]
set_position_z:0 # Make printer think Z axis is at zero, so we can force a move upwards away from build plate
axes: z #will only call override if x is involved in the homing call
gcode:
  G90
  G1 Z10 F3000 ; move up to prevent accidentally scratching build plate    
  {% if "x" not in (printer.toolhead.homed_axes | lower) %}
      G28 X
  {% endif %}
  {% if "y" not in (printer.toolhead.homed_axes | lower) %}
      G28 Y        #Will only home XY if they are not currently homed
  {% endif %}
  PROBE_OUT
  G1 X88.5 Y117.5 F6000 ; Adjusted for normal klack offsets with a 235x235 bed X: 117.5 - x_offset, Y: 117.5 - y_offset
  G28 Z
  PROBE_IN
  
[screws_tilt_adjust] #Change to your specific printer is needed. Back left screw as referance point and that's where strain relief is is recommended
screw1: 3.5, 202.5
screw1_name: Back left
screw2: 3.5, 32.5
screw2_name: Front left
screw3: 173.5, 32.5
screw3_name: Front right
screw4: 173.5, 202.5
screw4_name: Back right
screw_thread: CW-M4 #Ender 3s use CW-M4 change for your printer if needed
horizontal_move_z: 15
# To calculate the position of your screws:
# Screw Offsets: 32.5mm for ender 3 beds
# Default Klack probe offsets: X: 4, Y: 21
#Back left	
#   X: 0 + screw_x_offset - probe.x_offset
#   Y: 235 - screw_y_offset - probe.y_offset
#Front left	
#   X: 0 + screw_x_offset - probe.x_offset	
#   Y: 0 + screw_y_offset - probe.y_offset
#Front right 
#   X: 235 - screw_x_offset - probe.x_offset	
#   Y: 0 + screw_y_offset - probe.y_offset
#Back right	
#   X: 235 - screw_x_offset - probe.x_offset	
#   Y: 235 - screw_y_offset - probe.y_offset
# x and y offsets are usually the same. You will have to find info on your printer or measure them yourself
# This can be adapted for three screw bed as well without eny problem. In that case X offset of the third screw would be build volume divided by 2

[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing: _SCREWS_TILT_CALCULATE
gcode:
  G28 ; Should always home before calculation even if already homed
  probe_out
  _SCREWS_TILT_CALCULATE
  probe_in
  G1 Y235

#Uncomment for Dual Z setups only!! (with independent motors and drivers, not Y splitters nor dual Z port from one driver on board!)##
[z_tilt]
z_positions:
  0,117.5
  235,117.5
    # A list of X, Y coordinates (one per line; subsequent lines
    # indented) describing the location of each bed "pivot point". The
    # "pivot point" is the point where the bed attaches to the given Z
    # stepper. It is described using nozzle coordinates (the X, Y position
    # of the nozzle if it could move directly above the point). The
    # first entry corresponds to stepper_z, the second to stepper_z1,
    # the third to stepper_z2, etc. This parameter must be provided.
points:
  0,117.5
  177,117.5
    # A list of X, Y coordinates (one per line; subsequent lines
    # indented) that should be probed during a Z_TILT_ADJUST command.
    # Specify coordinates of the nozzle and be sure the probe is above
    # the bed at the given nozzle coordinates. This parameter must be
    # provided.
speed: 100
    # The speed (in mm/s) of non-probing moves during the calibration.
    # The default is 50.
horizontal_move_z: 15
    # The height (in mm) that the head should be commanded to move to
    # just prior to starting a probe operation. The default is 5.
retries: 10
    # Number of times to retry if the probed points aren't within
    # tolerance.
retry_tolerance: 0.01
    # If retries are enabled then retry if largest and smallest probed
    # points differ more than retry_tolerance. Note the smallest unit of
    # change here would be a single step. However if you are probing
    # more points than steppers then you will likely have a fixed
    # minimum value for the range of probed points which you can learn
    # by observing command output.


#####################################################################
# KlackEnder- Macros
#####################################################################

[gcode_macro PROBE_OUT]
gcode:
  G90
  G1 X252 F4000
  G4 P300
  G1 Z15
  G1 X200 # default 0

[gcode_macro PROBE_IN]
gcode:
  G90
  G1 Z15
  G1 X250 F6000
  G1 Y-3 ; Check this against your config of [stepper_y] position_min: ...!
  G1 Z1
  G4 P300
  G1 X220 F6000
  G1 Z15
  G1 X200 # default 0

[gcode_macro BED_MESH_CALIBRATE] #macro with parameter passing
rename_existing: _BED_MESH_CALIBRATE
gcode:
  PROBE_OUT
  _BED_MESH_CALIBRATE {rawparams}
  PROBE_IN

[gcode_macro G29] #reliant on the macro above
gcode:
  BED_MESH_CALIBRATE

[gcode_macro PROBE_CALIBRATE]
rename_existing: _PROBE_CALIBRATE
gcode:
  {% if not 'xyz' in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  PROBE_OUT
  G90
  G1 Z20
  G1 X88.5 Y117.5 F12000 ; Readjust for center of bed adjusted for probe offset
  _PROBE_CALIBRATE
  TESTZ Z=20
  M117 Remove the Klack to continue calibration!

[gcode_macro PROBE_ACCURACY]
rename_existing: _PROBE_ACCURACY
gcode:
  {% if not 'xyz' in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  PROBE_OUT
  G90
  G1 X88.5 Y117.5 F12000 ; Readjust for center of bed adjusted for probe offset
  _PROBE_ACCURACY
  PROBE_IN

[gcode_macro Z_TILT_ADJUST] #Uncomment this macro if using dual z with z_tilt
rename_existing: _Z_TILT_ADJUST
gcode:
   PROBE_OUT
   _Z_TILT_ADJUST
   PROBE_IN


#################################################################
#    KlackEnder- Menu - Only if you have a display installed!   #
# Will error if you don't have a display configured in klipper. #
#                       Remove if unneeded                      #
#################################################################

# [menu __main]
# type: list
# name: Main

# [menu __main __KlackEnder]
# type: list
# enable: True
# name: KlackEnder

# [menu __main __KlackEnder __ProbeOut]
# type: command
# name: Probe Out
# gcode:
#   PROBE_OUT

# [menu __main __KlackEnder __ProbeIn]
# type: command
# name: Probe In
# gcode:
#   PROBE_IN

# [menu __main __KlackEnder __AutoBedMesh]
# type: command
# name: Auto Bed Mesh
# gcode:
#   G28
#   BED_MESH_CALIBRATE
  
# [menu __main __KlackEnder __ScrewsTiltCalculate]
# type: command
# name: Screws Tilt Calculate
# gcode:
#   SCREWS_TILT_CALCULATE

#####################################################################
# Main Macros
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  # {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  # {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set x_wait = 235|float / 2 %} #bed size/2
  {% set y_wait = 235|float / 2 %} #bed size/2

  # Homes the printer, sets absolute positioning.
  G28                   # Full home (XYZ)
  G90                   # Absolut position
  
  # Bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  
  # Bed heating
  SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
  G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
  M190 S{target_bed}                                  # Sets the target temp for the bed

  # Z tilt
  SET_DISPLAY_TEXT MSG="Z Tilt adjust"                  # Displays info
  G28
  Z_TILT_ADJUST
  G28

  # Bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"                  # Displays info
  BED_MESH_CALIBRATE METHOD=automatic ADAPTIVE=1   # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  G90                                              # Absolut position
  G0 X{x_wait - 50} Y1 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position
  SET_DISPLAY_TEXT

[gcode_macro END_PRINT]
gcode:
  G92 E0                         ; Zero the extruder
  G1 E-5 F3600                   ; Retract filament
  TURN_OFF_HEATERS
  M107                           ; Turn off fans
  G91                            ; Relative positioning
  G0 Z5 F3600                    ; Move nozzle up
  G90                            ; Absolute positioning
  G28 X                          ; Home X
  G0 Y235                        ; Move bed to front
  # Disable steppers
  M84
  # Text
  SET_DISPLAY_TEXT MSG="Printer done!"
  # BEEP - play tune when the print finishes
  M300 S440 P600
  M300 S554 P150
  G4 P50 ; short delay
  M300 S554 P200
  M300 S494 P200
  M300 S440 P600
  M300 S370 P600

# Mainsail pause/stop settings

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 235   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 30.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 30.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 120.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
#                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
# !!! Custom macros, please use with care and review the section of the corresponding macro.
# These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
# Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:
